_G.loaded = true

-- Instances:

local ProjectAuto = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local HeaderName = Instance.new("TextLabel")
local ConsoleMain = Instance.new("Frame")
local Console = Instance.new("ScrollingFrame")
local SettingsMain = Instance.new("Frame")
local KillAuraButton = Instance.new("TextButton")
local BackGround = Instance.new("ImageLabel")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")
local AutoRobButton = Instance.new("TextButton")
local UICorner_3 = Instance.new("UICorner")
local BackGround_2 = Instance.new("ImageLabel")
local UICorner_4 = Instance.new("UICorner")
local SafeButton = Instance.new("TextButton")
local UICorner_5 = Instance.new("UICorner")
local BackGround_3 = Instance.new("ImageLabel")
local UICorner_6 = Instance.new("UICorner")
local KillAura = Instance.new("TextLabel")
local Safe = Instance.new("TextLabel")
local BotFlySpeedSlider = Instance.new("ImageLabel")
local Handle = Instance.new("ImageButton")
local UICorner_7 = Instance.new("UICorner")
local BackGround_4 = Instance.new("ImageLabel")
local UICorner_8 = Instance.new("UICorner")
local BotFlySpeed = Instance.new("TextLabel")
local BotCarSpeed = Instance.new("TextLabel")
local BotCarSpeedSlider = Instance.new("ImageLabel")
local Handle_2 = Instance.new("ImageButton")
local UICorner_9 = Instance.new("UICorner")
local BackGround_5 = Instance.new("ImageLabel")
local UICorner_10 = Instance.new("UICorner")
local GroundSpeedLabel = Instance.new("TextLabel")
local GroundSpeedSlider = Instance.new("ImageLabel")
local Handle_3 = Instance.new("ImageButton")
local UICorner_11 = Instance.new("UICorner")
local BackGround_6 = Instance.new("ImageLabel")
local UICorner_12 = Instance.new("UICorner")
local KillAuraRange = Instance.new("TextLabel")
local KillAuraSpeedSlider = Instance.new("ImageLabel")
local Handle_4 = Instance.new("ImageButton")
local UICorner_13 = Instance.new("UICorner")
local BackGround_7 = Instance.new("ImageLabel")
local UICorner_14 = Instance.new("UICorner")
local HeaderName_2 = Instance.new("TextLabel")
local Version = Instance.new("TextLabel")
local UICorner_15 = Instance.new("UICorner")
local ConsoleButton = Instance.new("TextButton")
local UICorner_16 = Instance.new("UICorner")
local BackGround_8 = Instance.new("ImageLabel")
local UICorner_17 = Instance.new("UICorner")
local SettingsButton = Instance.new("TextButton")
local UICorner_18 = Instance.new("UICorner")
local BackGround_9 = Instance.new("ImageLabel")
local UICorner_19 = Instance.new("UICorner")
local MainBackground = Instance.new("Frame")
local UICorner_20 = Instance.new("UICorner")
local Devider = Instance.new("ImageLabel")

--Properties:

ProjectAuto.Name = "ProjectAuto"
ProjectAuto.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

Main.Name = "Main"
Main.Parent = ProjectAuto
Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Main.BackgroundTransparency = 0.300
Main.BorderColor3 = Color3.fromRGB(0, 255, 255)
Main.Position = UDim2.new(0.111452237, 0, 0.112865143, 0)
Main.Size = UDim2.new(0, 590, 0, 313)

HeaderName.Name = "HeaderName"
HeaderName.Parent = Main
HeaderName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HeaderName.BackgroundTransparency = 1.000
HeaderName.BorderColor3 = Color3.fromRGB(85, 0, 255)
HeaderName.Position = UDim2.new(0.0220338982, 0, 0.0319488831, 0)
HeaderName.Size = UDim2.new(0, 99, 0, 26)
HeaderName.Font = Enum.Font.SourceSans
HeaderName.Text = "ProjectAuto"
HeaderName.TextColor3 = Color3.fromRGB(255, 255, 255)
HeaderName.TextSize = 25.000
HeaderName.TextTransparency = 0.500

ConsoleMain.Name = "ConsoleMain"
ConsoleMain.Parent = Main
ConsoleMain.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
ConsoleMain.BackgroundTransparency = 1.000
ConsoleMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
ConsoleMain.Position = UDim2.new(0, 0, 0, 40)
ConsoleMain.Size = UDim2.new(0, 590, 0, 273)

Console.Name = "Console"
Console.Parent = ConsoleMain
Console.Active = true
Console.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Console.BackgroundTransparency = 0.700
Console.BorderColor3 = Color3.fromRGB(0, 255, 255)
Console.BorderSizePixel = 0
Console.Position = UDim2.new(0, 19, 0, 22)
Console.Size = UDim2.new(0, 550, 0, 236)
Console.AutomaticCanvasSize = "Y"
Console.CanvasSize = UDim2.new(0, 0, 0.864000022, 0)
Console.ScrollBarThickness = 5

SettingsMain.Name = "SettingsMain"
SettingsMain.Parent = Main
SettingsMain.BackgroundColor3 = Color3.fromRGB(15, 15, 15)
SettingsMain.BackgroundTransparency = 1.000
SettingsMain.BorderColor3 = Color3.fromRGB(0, 255, 255)
SettingsMain.BorderSizePixel = 0
SettingsMain.Position = UDim2.new(0, 0, 0, 40)
SettingsMain.Size = UDim2.new(0, 590, 0, 273)

KillAuraButton.Name = "KillAuraButton"
KillAuraButton.Parent = SettingsMain
KillAuraButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KillAuraButton.BackgroundTransparency = 0.500
KillAuraButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
KillAuraButton.Position = UDim2.new(0.744591236, 0, 0.0985314697, 0)
KillAuraButton.Size = UDim2.new(0, 50, 0, 25)
KillAuraButton.ZIndex = 2
KillAuraButton.Font = Enum.Font.SourceSans
KillAuraButton.Text = "on"
KillAuraButton.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAuraButton.TextSize = 20.000
KillAuraButton.TextStrokeColor3 = Color3.fromRGB(20, 20, 20)
KillAuraButton.TextTransparency = 0.500

BackGround.Name = "BackGround"
BackGround.Parent = KillAuraButton
BackGround.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround.BackgroundTransparency = 0.500
BackGround.Position = UDim2.new(0, -1, 0, -1)
BackGround.Size = UDim2.new(0, 52, 0, 27)

UICorner.CornerRadius = UDim.new(0, 3)
UICorner.Parent = BackGround

UICorner_2.CornerRadius = UDim.new(0, 3)
UICorner_2.Parent = KillAuraButton

AutoRobButton.Name = "AutoRobButton"
AutoRobButton.Parent = SettingsMain
AutoRobButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
AutoRobButton.BackgroundTransparency = 0.500
AutoRobButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
AutoRobButton.Position = UDim2.new(0.0248102751, 0, 0.763326585, 0)
AutoRobButton.Size = UDim2.new(0, 560, 0, 50)
AutoRobButton.ZIndex = 2
AutoRobButton.Font = Enum.Font.SourceSans
AutoRobButton.Text = "Auto Rob Enabled"
AutoRobButton.TextColor3 = Color3.fromRGB(255, 255, 255)
AutoRobButton.TextSize = 20.000
AutoRobButton.TextStrokeColor3 = Color3.fromRGB(75, 149, 51)
AutoRobButton.TextTransparency = 0.500

UICorner_3.CornerRadius = UDim.new(0, 3)
UICorner_3.Parent = AutoRobButton

BackGround_2.Name = "BackGround"
BackGround_2.Parent = AutoRobButton
BackGround_2.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_2.BackgroundTransparency = 0.500
BackGround_2.Position = UDim2.new(0, -1, 0, -1)
BackGround_2.Size = UDim2.new(0, 562, 0, 52)

UICorner_4.CornerRadius = UDim.new(0, 3)
UICorner_4.Parent = BackGround_2

SafeButton.Name = "SafeButton"
SafeButton.Parent = SettingsMain
SafeButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SafeButton.BackgroundTransparency = 0.500
SafeButton.BorderColor3 = Color3.fromRGB(0, 255, 0)
SafeButton.Position = UDim2.new(0.325612932, 0, 0.0985314697, 0)
SafeButton.Size = UDim2.new(0, 50, 0, 25)
SafeButton.ZIndex = 2
SafeButton.Font = Enum.Font.SourceSans
SafeButton.Text = "on"
SafeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SafeButton.TextSize = 20.000
SafeButton.TextTransparency = 0.500

UICorner_5.CornerRadius = UDim.new(0, 3)
UICorner_5.Parent = SafeButton

BackGround_3.Name = "BackGround"
BackGround_3.Parent = SafeButton
BackGround_3.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
BackGround_3.BackgroundTransparency = 0.500
BackGround_3.Position = UDim2.new(0, -1, 0, -1)
BackGround_3.Size = UDim2.new(0, 52, 0, 27)

UICorner_6.CornerRadius = UDim.new(0, 3)
UICorner_6.Parent = BackGround_3

KillAura.Name = "Kill Aura"
KillAura.Parent = SettingsMain
KillAura.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KillAura.BackgroundTransparency = 1.000
KillAura.BorderColor3 = Color3.fromRGB(25, 25, 25)
KillAura.BorderSizePixel = 0
KillAura.Position = UDim2.new(0.489705145, 0, 0.0839416236, 0)
KillAura.Size = UDim2.new(0, 100, 0, 35)
KillAura.Font = Enum.Font.SourceSans
KillAura.Text = "Kill Aura"
KillAura.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAura.TextSize = 25.000
KillAura.TextStrokeColor3 = Color3.fromRGB(200, 200, 200)
KillAura.TextTransparency = 0.500

Safe.Name = "Safe"
Safe.Parent = SettingsMain
Safe.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Safe.BackgroundTransparency = 1.000
Safe.BorderColor3 = Color3.fromRGB(25, 25, 25)
Safe.BorderSizePixel = 0
Safe.Position = UDim2.new(0.0749204308, 0, 0.0807714611, 0)
Safe.Size = UDim2.new(0, 100, 0, 35)
Safe.Font = Enum.Font.SourceSans
Safe.Text = "Safe"
Safe.TextColor3 = Color3.fromRGB(255, 255, 255)
Safe.TextSize = 25.000
Safe.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
Safe.TextTransparency = 0.500

BotFlySpeedSlider.Name = "BotFlySpeedSlider"
BotFlySpeedSlider.Parent = SettingsMain
BotFlySpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
BotFlySpeedSlider.BackgroundTransparency = 0.700
BotFlySpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
BotFlySpeedSlider.BorderSizePixel = 0
BotFlySpeedSlider.Position = UDim2.new(0.448132843, 0, 0.384615421, 0)
BotFlySpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle.Name = "Handle"
Handle.Parent = BotFlySpeedSlider
Handle.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Handle.BackgroundTransparency = 0.500
Handle.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle.Position = UDim2.new(-0.860465109, 185, -0.26699999, 0)
Handle.Size = UDim2.new(0, 15, 0, 25)
Handle.ZIndex = 2

UICorner_7.CornerRadius = UDim.new(0, 3)
UICorner_7.Parent = Handle

BackGround_4.Name = "BackGround"
BackGround_4.Parent = Handle
BackGround_4.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_4.BackgroundTransparency = 0.500
BackGround_4.Position = UDim2.new(0, -1, 0, -1)
BackGround_4.Size = UDim2.new(0, 17, 0, 27)

UICorner_8.CornerRadius = UDim.new(0, 3)
UICorner_8.Parent = BackGround_4

BotFlySpeed.Name = "BotFlySpeed"
BotFlySpeed.Parent = SettingsMain
BotFlySpeed.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
BotFlySpeed.BackgroundTransparency = 1.000
BotFlySpeed.BorderColor3 = Color3.fromRGB(25, 25, 25)
BotFlySpeed.BorderSizePixel = 0
BotFlySpeed.Position = UDim2.new(0.105068661, 0, 0.35550341, 0)
BotFlySpeed.Size = UDim2.new(0, 100, 0, 35)
BotFlySpeed.Font = Enum.Font.SourceSans
BotFlySpeed.Text = "Bot Fly Speed"
BotFlySpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
BotFlySpeed.TextSize = 25.000
BotFlySpeed.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
BotFlySpeed.TextTransparency = 0.500

BotCarSpeed.Name = "BotCarSpeed"
BotCarSpeed.Parent = SettingsMain
BotCarSpeed.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
BotCarSpeed.BackgroundTransparency = 1.000
BotCarSpeed.BorderColor3 = Color3.fromRGB(25, 25, 25)
BotCarSpeed.BorderSizePixel = 0
BotCarSpeed.Position = UDim2.new(0.105068661, 0, 0.477880985, 0)
BotCarSpeed.Size = UDim2.new(0, 100, 0, 35)
BotCarSpeed.Font = Enum.Font.SourceSans
BotCarSpeed.Text = "Bot Car Speed"
BotCarSpeed.TextColor3 = Color3.fromRGB(255, 255, 255)
BotCarSpeed.TextSize = 25.000
BotCarSpeed.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
BotCarSpeed.TextTransparency = 0.500

BotCarSpeedSlider.Name = "BotCarSpeedSlider"
BotCarSpeedSlider.Parent = SettingsMain
BotCarSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
BotCarSpeedSlider.BackgroundTransparency = 0.700
BotCarSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
BotCarSpeedSlider.BorderSizePixel = 0
BotCarSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.506993055, 0)
BotCarSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_2.Name = "Handle"
Handle_2.Parent = BotCarSpeedSlider
Handle_2.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Handle_2.BackgroundTransparency = 0.500
Handle_2.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_2.Position = UDim2.new(0, 0, -0.333333343, 0)
Handle_2.Size = UDim2.new(0, 15, 0, 25)
Handle_2.ZIndex = 2

UICorner_9.CornerRadius = UDim.new(0, 3)
UICorner_9.Parent = Handle_2

BackGround_5.Name = "BackGround"
BackGround_5.Parent = Handle_2
BackGround_5.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_5.BackgroundTransparency = 0.500
BackGround_5.Position = UDim2.new(0, -1, 0, -1)
BackGround_5.Size = UDim2.new(0, 17, 0, 27)

UICorner_10.CornerRadius = UDim.new(0, 3)
UICorner_10.Parent = BackGround_5

GroundSpeedLabel.Name = "GroundSpeedLabel"
GroundSpeedLabel.Parent = SettingsMain
GroundSpeedLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
GroundSpeedLabel.BackgroundTransparency = 1.000
GroundSpeedLabel.BorderColor3 = Color3.fromRGB(25, 25, 25)
GroundSpeedLabel.BorderSizePixel = 0
GroundSpeedLabel.Position = UDim2.new(0.105068661, 0, 0.600258589, 0)
GroundSpeedLabel.Size = UDim2.new(0, 100, 0, 35)
GroundSpeedLabel.Font = Enum.Font.SourceSans
GroundSpeedLabel.Text = "Bot Ground Speed"
GroundSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
GroundSpeedLabel.TextSize = 25.000
GroundSpeedLabel.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
GroundSpeedLabel.TextTransparency = 0.500

GroundSpeedSlider.Name = "GroundSpeedSlider"
GroundSpeedSlider.Parent = SettingsMain
GroundSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
GroundSpeedSlider.BackgroundTransparency = 0.700
GroundSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
GroundSpeedSlider.BorderSizePixel = 0
GroundSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.629370689, 0)
GroundSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_3.Name = "Handle"
Handle_3.Parent = GroundSpeedSlider
Handle_3.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Handle_3.BackgroundTransparency = 0.500
Handle_3.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_3.Position = UDim2.new(0, 0, -0.333333343, 0)
Handle_3.Size = UDim2.new(0, 15, 0, 25)
Handle_3.ZIndex = 2

UICorner_11.CornerRadius = UDim.new(0, 3)
UICorner_11.Parent = Handle_3

BackGround_6.Name = "BackGround"
BackGround_6.Parent = Handle_3
BackGround_6.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_6.BackgroundTransparency = 0.500
BackGround_6.Position = UDim2.new(0, -1, 0, -1)
BackGround_6.Size = UDim2.new(0, 17, 0, 27)

UICorner_12.CornerRadius = UDim.new(0, 3)
UICorner_12.Parent = BackGround_6

KillAuraRange.Name = "KillAuraRange"
KillAuraRange.Parent = SettingsMain
KillAuraRange.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
KillAuraRange.BackgroundTransparency = 1.000
KillAuraRange.BorderColor3 = Color3.fromRGB(25, 25, 25)
KillAuraRange.BorderSizePixel = 0
KillAuraRange.Position = UDim2.new(0.105068661, 0, 0.230961293, 0)
KillAuraRange.Size = UDim2.new(0, 100, 0, 35)
KillAuraRange.Font = Enum.Font.SourceSans
KillAuraRange.Text = "Kill Aura Range"
KillAuraRange.TextColor3 = Color3.fromRGB(255, 255, 255)
KillAuraRange.TextSize = 25.000
KillAuraRange.TextStrokeColor3 = Color3.fromRGB(255, 255, 255)
KillAuraRange.TextTransparency = 0.500

KillAuraSpeedSlider.Name = "KillAuraSpeedSlider"
KillAuraSpeedSlider.Parent = SettingsMain
KillAuraSpeedSlider.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
KillAuraSpeedSlider.BackgroundTransparency = 0.700
KillAuraSpeedSlider.BorderColor3 = Color3.fromRGB(200, 0, 0)
KillAuraSpeedSlider.BorderSizePixel = 0
KillAuraSpeedSlider.Position = UDim2.new(0.448132843, 0, 0.260073304, 0)
KillAuraSpeedSlider.Size = UDim2.new(0, 215, 0, 15)

Handle_4.Name = "Handle"
Handle_4.Parent = KillAuraSpeedSlider
Handle_4.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Handle_4.BackgroundTransparency = 0.500
Handle_4.BorderColor3 = Color3.fromRGB(0, 255, 255)
Handle_4.Position = UDim2.new(-0.860465109, 185, -0.26699999, 0)
Handle_4.Size = UDim2.new(0, 15, 0, 25)
Handle_4.ZIndex = 2

UICorner_13.CornerRadius = UDim.new(0, 3)
UICorner_13.Parent = Handle_4

BackGround_7.Name = "BackGround"
BackGround_7.Parent = Handle_4
BackGround_7.BackgroundColor3 = Color3.fromRGB(0, 13, 250)
BackGround_7.BackgroundTransparency = 0.500
BackGround_7.Position = UDim2.new(0, -1, 0, -1)
BackGround_7.Size = UDim2.new(0, 17, 0, 27)

UICorner_14.CornerRadius = UDim.new(0, 3)
UICorner_14.Parent = BackGround_7

HeaderName_2.Name = "HeaderName"
HeaderName_2.Parent = Main
HeaderName_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
HeaderName_2.BackgroundTransparency = 1.000
HeaderName_2.BorderColor3 = Color3.fromRGB(85, 0, 255)
HeaderName_2.Position = UDim2.new(0.784745872, 0, 0.028753994, 0)
HeaderName_2.Size = UDim2.new(0, 112, 0, 26)
HeaderName_2.Font = Enum.Font.SourceSans
HeaderName_2.Text = "mapler - Pxsta"
HeaderName_2.TextColor3 = Color3.fromRGB(255, 255, 255)
HeaderName_2.TextSize = 20.000
HeaderName_2.TextTransparency = 0.500

Version.Name = "Version"
Version.Parent = Main
Version.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Version.BackgroundTransparency = 1.000
Version.Position = UDim2.new(0.172881335, 0, 0.0504082292, 0)
Version.Size = UDim2.new(0, 49, 0, 20)
Version.Font = Enum.Font.SourceSans
Version.Text = "v 0.1"
Version.TextColor3 = Color3.fromRGB(255, 255, 255)
Version.TextSize = 15.000
Version.TextTransparency = 0.500
Version.TextWrapped = true

UICorner_15.CornerRadius = UDim.new(0, 20)
UICorner_15.Parent = Main

ConsoleButton.Name = "ConsoleButton"
ConsoleButton.Parent = Main
ConsoleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
ConsoleButton.BackgroundTransparency = 0.500
ConsoleButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
ConsoleButton.Position = UDim2.new(0.303669721, 0, 0.0278044641, 0)
ConsoleButton.Size = UDim2.new(0, 109, 0, 26)
ConsoleButton.ZIndex = 2
ConsoleButton.Font = Enum.Font.SourceSans
ConsoleButton.Text = "Console"
ConsoleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ConsoleButton.TextSize = 20.000
ConsoleButton.TextTransparency = 0.500

UICorner_16.CornerRadius = UDim.new(0, 3)
UICorner_16.Parent = ConsoleButton

BackGround_8.Name = "BackGround"
BackGround_8.Parent = ConsoleButton
BackGround_8.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_8.BackgroundTransparency = 0.500
BackGround_8.BorderColor3 = Color3.fromRGB(27, 42, 53)
BackGround_8.Position = UDim2.new(0, -1, 0, -1)
BackGround_8.Size = UDim2.new(0, 111, 0, 28)

UICorner_17.CornerRadius = UDim.new(0, 3)
UICorner_17.Parent = BackGround_8

SettingsButton.Name = "SettingsButton"
SettingsButton.Parent = Main
SettingsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SettingsButton.BackgroundTransparency = 0.500
SettingsButton.BorderColor3 = Color3.fromRGB(0, 255, 255)
SettingsButton.Position = UDim2.new(0.518644094, 0, 0.0255591273, 0)
SettingsButton.Size = UDim2.new(0, 109, 0, 26)
SettingsButton.ZIndex = 2
SettingsButton.Font = Enum.Font.SourceSans
SettingsButton.Text = "Settings"
SettingsButton.TextColor3 = Color3.fromRGB(255, 255, 255)
SettingsButton.TextSize = 20.000
SettingsButton.TextTransparency = 0.500

UICorner_18.CornerRadius = UDim.new(0, 3)
UICorner_18.Parent = SettingsButton

BackGround_9.Name = "BackGround"
BackGround_9.Parent = SettingsButton
BackGround_9.BackgroundColor3 = Color3.fromRGB(163, 0, 233)
BackGround_9.BackgroundTransparency = 0.500
BackGround_9.Position = UDim2.new(0, -1, 0, -1)
BackGround_9.Size = UDim2.new(0, 111, 0, 28)

UICorner_19.CornerRadius = UDim.new(0, 3)
UICorner_19.Parent = BackGround_9

MainBackground.Name = "MainBackground"
MainBackground.Parent = Main
MainBackground.BackgroundColor3 = Color3.fromRGB(121, 5, 237)
MainBackground.BackgroundTransparency = 0.500
MainBackground.BorderColor3 = Color3.fromRGB(0, 255, 255)
MainBackground.Position = UDim2.new(0, -1, 0, -1)
MainBackground.Size = UDim2.new(0, 592, 0, 315)
MainBackground.ZIndex = 0

UICorner_20.CornerRadius = UDim.new(0, 20)
UICorner_20.Parent = MainBackground

Devider.Name = "Devider"
Devider.Parent = Main
Devider.BackgroundColor3 = Color3.fromRGB(121, 5, 237)
Devider.BackgroundTransparency = 0.500
Devider.BorderSizePixel = 0
Devider.Position = UDim2.new(-0.00194601715, 0, 0.139605373, 0)
Devider.Size = UDim2.new(0, 592, 0, 1)

-- Scripts:

local function DZOI_fake_script() -- BotFlySpeedSlider.LocalScript 






























end
coroutine.wrap(DZOI_fake_script)()
local function OLUH_fake_script() -- BotCarSpeedSlider.LocalScript 






























end
coroutine.wrap(OLUH_fake_script)()
local function RETUYZ_fake_script() -- GroundSpeedSlider.LocalScript 






























end
coroutine.wrap(RETUYZ_fake_script)()
local function CPIKI_fake_script() -- KillAuraSpeedSlider.LocalScript 






























end
coroutine.wrap(CPIKI_fake_script)()
----------------------------------------------------------------

function onKeyPress(inputObject, gameProcessedEvent)

    if inputObject.KeyCode == Enum.KeyCode.RightShift then
        if not Main.Visible then
            Main.Visible = true
        else
            Main.Visible = false
        end
    end
end

game:GetService("UserInputService").InputBegan:connect(onKeyPress)

Main.Active = true
Main.Draggable = true
ConsoleMain.Visible = true
SettingsMain.Visible = false
ConsoleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)

ConsoleButton.MouseButton1Click:Connect(function()
ConsoleButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
SettingsButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    ConsoleMain.Visible = true
    SettingsMain.Visible = false
end)

SettingsButton.MouseButton1Click:Connect(function()
ConsoleButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
SettingsButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ConsoleMain.Visible = false
    SettingsMain.Visible = true
end)

----------------------------------------------------------------

local MessagePostion = 0
function CreateMessage(message)
    local NewMessage = Instance.new("TextLabel")

    NewMessage.Parent = Console
NewMessage.Position = UDim2.new(0, 0, MessagePostion, 0)
NewMessage.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
NewMessage.BackgroundTransparency = 0.700
NewMessage.BorderColor3 = Color3.fromRGB(0, 0, 0)
NewMessage.BorderSizePixel = 0
NewMessage.Size = UDim2.new(0, 550, 0, 25)
    NewMessage.Font = Enum.Font.SourceSans
    NewMessage.Text = message
NewMessage.TextColor3 = Color3.fromRGB(200, 200, 200)
NewMessage.TextSize = 25.000
end

local CharPerLine = 55

function LogMessage(message)
    if message == nil then
        return
    end
    local lines = math.floor(#(message) / CharPerLine)

for i = 0, lines, 1 do
        if i < lines then
CreateMessage(string.sub(message, i * CharPerLine, ((i + 1) * CharPerLine) - 1))
        else
            CreateMessage(string.sub(message, i * CharPerLine, #(message)))
        end
MessagePostion += 0.1
    end

MessagePostion += 0.05
end

----------------------------------------------------------------

local Bot = game.Players.localPlayer
local RobbingLocation = false
local toggled = false -- TRUE = ON  | FALSE = OFF
local reset = false
local exitCar = require(game:GetService("ReplicatedStorage").Game.CharacterUtil)

local network = getupvalue(require(game.ReplicatedStorage.Module.AlexChassis).SetEvent, 1)
local punchHash = "jtxd1alz"
local hash = 'oprp6d19'

local config = {
    safe = true,
    killAura = false,
killAuraRange = 150,
CarSpeed = -100,
FlySpeed = -50,
GroundSpeed = 1,
}

----------------------------------------------------------------

SafeButton.MouseButton1Click:Connect(function()
    config.safe = not config.safe

    if not config.safe then
SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        SafeButton.Text = "off"
    else
SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        SafeButton.Text = "on"
    end
end)

KillAuraButton.MouseButton1Click:Connect(function()
    config.killAura = not config.killAura

    if not config.killAura then
KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        KillAuraButton.Text = "off"
    else
KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        KillAuraButton.Text = "on"
    end
end)

AutoRobButton.MouseButton1Click:Connect(function()
    toggled = not toggled

    if not toggled then
AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        AutoRobButton.Text = "Auto Rob Disabled"
    else
AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
        AutoRobButton.Text = "Auto Rob Enabled"
    end
end)

----------------------------------------------------------------


function load()
    local HttpService = game:GetService("HttpService")
    if readfile and isfile then 
        if isfile("autorob.txt") then
            config = HttpService:JSONDecode(readfile("autorob.txt"))
        end
    end
end

function save()
    local json
    local HttpService = game:GetService("HttpService")
    if writefile then 
        json = HttpService:JSONEncode(config)
        writefile("autorob.txt", json)
    end
end

load()
    
if config.safe == nil then
    config.safe = true
end
if config.killAura == nil then
    config.killAura = true
end
if config.killAuraRange == nil then
config.killAuraRange = 150
end
if config.CarSpeed == nil then
config.CarSpeed = -600
end
if config.FlySpeed == nil then
config.FlySpeed = -150
end
if config.GroundSpeed == nil then
config.GroundSpeed = 9
end

if not config.safe then
SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    SafeButton.Text = "off"
else
SafeButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    SafeButton.Text = "on"
end
if not config.killAura then
KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    KillAuraButton.Text = "off"
else
KillAuraButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    KillAuraButton.Text = "on"
end
if not toggled then
AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    AutoRobButton.Text = "Auto Rob Disabled"
else
AutoRobButton:FindFirstChildOfClass("ImageLabel").BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    AutoRobButton.Text = "Auto Rob Enabled"
end



-- (MAX + MIN) / NUM = 200, (MAX + MIN) / 200 = NUM
BotFlySpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.FlySpeed + 50) / -0.5, BotFlySpeedSlider:FindFirstChild("Handle").Position.Y.Scale, BotFlySpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
GroundSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.GroundSpeed + 1) / 0.05, GroundSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, GroundSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
BotCarSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.CarSpeed + 100) / -2.5, BotCarSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, BotCarSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)
KillAuraSpeedSlider:FindFirstChild("Handle").Position = UDim2.new(0, (config.killAuraRange + 50) / 3.25, KillAuraSpeedSlider:FindFirstChild("Handle").Position.Y.Scale, KillAuraSpeedSlider:FindFirstChild("Handle").Position.Y.Offset)

coroutine.wrap(function() -- 200 * NUM + MIN = MAX, (MAX - MIN) / 200 = NUM
    while true do
config.FlySpeed = BotFlySpeedSlider:FindFirstChild("Handle").Position.X.Offset * -0.5 - 50
config.GroundSpeed = GroundSpeedSlider:FindFirstChild("Handle").Position.X.Offset * 0.04 + 1
config.CarSpeed = BotCarSpeedSlider:FindFirstChild("Handle").Position.X.Offset * -2.5 - 100
config.killAuraRange = KillAuraSpeedSlider:FindFirstChild("Handle").Position.X.Offset * 2.75 + 50
        save()
        wait()
    end
end)()
        

local rayDirection = Vector3.new(0, -3000, 0)
local rayDirection1 = Vector3.new(0, 3000, 0)

local Positions = {
Vector3.new(-1099, 500, -1378),
Vector3.new(-1544, 500, 719),
Vector3.new(740, 500, 1062),
Vector3.new(-1544, 500, 721)
}

function GetTombStatus()
    local Wall = nil
    if game.Workspace.RobberyTomb.Entrance.Doors:FindFirstChild("Door") then
Wall = game.Workspace.RobberyTomb.Entrance.Doors:GetChildren()[2].InnerModel.Wall
    else
        return false
    end

if Wall.Position.X < 535 then
        return true
    else
        return false
    end
end

function GetMansionStatus()
local Door = game:GetService("Workspace").MansionRobbery.Lobby.EntranceElevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door

if Door.Position.Z > 3201 then
        return true
    else
        return false
    end
end

function GetBankStatus()
    local BankStatus = nil
if #(game.Workspace.Banks:GetChildren()) > 0 then
BankStatus = game:GetService("Workspace").Banks:GetChildren()[1].Extra.Sign.Decal
    else
        return false
    end
if BankStatus.Transparency == 0 then
        return false
    else
        return true
    end
end

function GetJewelStatus()
    local JewelryStatus = nil
if #(game.Workspace.Jewelrys:GetChildren()) > 0 then
JewelryStatus = game.Workspace.Jewelrys:GetChildren()[1].Extras.Sign.Decal
    else
        return false
    end
if JewelryStatus.Transparency == 0 then
        return false
    else
        return true
    end
end

function GetRobbingJewel()
local Wall = game:GetService("Workspace"):FindFirstChild("Jewelrys"):GetChildren()[1].Wall.SecurityWall
if Wall.Position.Y < 50 then
        return true
    else
        return false
    end
end

function GetMuseumStatus(parameters)
    local RoofPart = game.Workspace.Museum.Roof.Hole.RoofPart

if RoofPart.Transparency > 0.5 then
        return true
    else
        return false
    end
end

function GetCasinoStatus()

    if not game.Workspace:FindFirstChild("Casino") then
        return false
    end
    local codes = {}
    local open = false

    for k, v in pairs(game.Workspace.Casino.RobberyDoor.Codes:GetChildren()) do
        codes[k] = v
    end
    

    for k, v in pairs(codes) do
        local CodeKids = codes[k]:GetChildren()


local Label = CodeKids[1]:GetChildren()[1]:GetChildren()[1]

local MinX = -99999
local MinZ = -99999
        local Pos = {}

        if Label.Text ~= " then
            open = true
            break
        end
    end

    if open then
        return true
    else
        return false
    end
end

function GetCasinoCodes() 

    if not game:GetService("Workspace"):FindFirstChild("Casino") then
        return nil
    end

    local code = "
local code1 = "

    local codes = {}
    local Text = {}

    for k, v in pairs(game:GetService("Workspace").Casino.RobberyDoor.Codes:GetChildren()) do
        codes[k] = v
    end
    

    for k, l in pairs(codes) do
        local CodeKids = codes[k]:GetChildren()


local Label = CodeKids[1]:GetChildren()[1]:GetChildren()[1]

local MinX = -99999
local MinZ = -99999
        local Pos = {}

        
        if Label.Text ~= " then
            for k, v in pairs(CodeKids) do
                local X = v.Position.X
                local Z = v.Position.Z
                local placed = false
                local done = false
Label = v:GetChildren()[1]:GetChildren()[1]
                
if math.floor(v.Rotation.Y) == -75 then
                    for k, v in pairs(Pos) do
                        if Z > Pos[k] then
                            table.insert(Text, k, Label.Text)
                            table.insert(Pos, k, Z)
                            placed = true
                            break
                        end
                    end
                    if not placed then
table.insert(Text, #(Text) + 1, Label.Text)
table.insert(Pos, #(Pos) + 1, Z)
                    end
                    done = true
                end
if math.floor(v.Rotation.Y) == 14 or math.floor(v.Rotation.Y) == 15 then
                    for k, v in pairs(Pos) do
                        if Z > Pos[k] then
                            table.insert(Text, k, Label.Text)
                            table.insert(Pos, k, Z)
                            placed = true
                            break
                        end
                    end
                    if not placed then
table.insert(Text, #(Text) + 1, Label.Text)
table.insert(Pos, #(Pos) + 1, Z)
                    end
                    done = true
                end
if math.floor(v.Rotation.Y) == -16 then
                    for k, v in pairs(Pos) do
                        if X < Pos[k] then
                            table.insert(Text, k, Label.Text)
                            table.insert(Pos, k, Z)
                            placed = true
                            break
                        end
                    end
                    if not placed then
table.insert(Text, #(Text) + 1, Label.Text)
table.insert(Pos, #(Pos) + 1, Z)
                        
                    end
                    done = true
                end
                if not done then
table.insert(Text, #(Text) + 1, Label.Text)
table.insert(Pos, #(Pos) + 1, X)
                end
            end

code = Text[1]..Text[2]..Text[3]..Text[4]
code1 = Text[4]..Text[3]..Text[2]..Text[1]
        end
    end
    if code ~= nil then
return {code, code1}
    else
        return nil
    end
end

function GetPos(location)
    local ClosestDistance = nil
    local MinDistance = math.huge
    for k, v in pairs(Positions) do
if (v - location).Magnitude + 5 <= MinDistance then
            local IgnorePos = false
            for k, l in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
                if l.Name == "Jeep" or l.Name == "Camaro" then
if (Vector3.new(l.Engine.Position.X, 500, l.Engine.Position.Z) - v).magnitude < 50 then
if (Vector3.new(l.Engine.Position.X, 500, l.Engine.Position.Z) - v).magnitude > 5 then
                            IgnorePos = true
                        end
                    end
                end
            end
            if not IgnorePos then
                MinDistance = (v - location).Magnitude
                ClosestDistance = v
            end
        end
    end
    for k, v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if v.Name == "Jeep" or v.Name == "Camaro" then
            if v.Seat.PlayerName.Value == " then

local rayOrigin = v.Seat.Position + Vector3.new(0, 5, 0)
local ray = Ray.new(rayOrigin, rayDirection1)
                local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                
                if hit == nil then
if (v.Seat.Position - location).Magnitude + 5 <= MinDistance then
                        MinDistance = (v.Seat.Position - location).Magnitude
                        ClosestDistance = v.Seat.Position
                    end
                end
            end
        end
    end
    return ClosestDistance
end

function botMove(location, LocationName, teleporting)

    Car = nil

    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if Car == nil then
local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -3, 0)
        local ray = Ray.new(rayOrigin, rayDirection)
        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            local ignoreStuff = {rain.RainDroplets, rain.RainFall}
            for k, v in pairs(Bot:GetChildren()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            local ignoreStuff = {}
            for k, v in pairs(Bot:GetChildren()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end
        if hit ~= nil then
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, pos.Y, Bot.Character.HumanoidRootPart.CFrame.Z)
wait(0.5)
        else
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
local rayDirection2 = Vector3.new(0, -5, 0)
            while hit == nil do
                rayOrigin = Bot.Character.HumanoidRootPart.Position
ray = Ray.new(rayOrigin, rayDirection2)
                rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    ignoreStuff = {rain}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                wait()
            end
        end

Bot.Character.HumanoidRootPart.Velocity = Vector3.new()

        local args = {
[1] = "Chassis",
[2] = "Jeep"
        }
        game:GetService("ReplicatedStorage").GarageSpawnVehicle:FireServer(unpack(args))
    end

wait(2)

    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    while Car == nil do
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 500, Bot.Character.HumanoidRootPart.CFrame.Z)
wait(1)

        move(GetPos(Bot.Character.HumanoidRootPart.Position))

local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -3, 0)
        local ray = Ray.new(rayOrigin, rayDirection)
        local rain = game:GetService("Workspace"):FindFirstChild("Rain")
        if rain ~= nil then
            ignoreStuff = {rain}
            for k, v in pairs(Bot:GetChildren()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        else
            local ignoreStuff = {}
            for k, v in pairs(Bot:GetChildren()) do
                table.insert(ignoreStuff, #(ignoreStuff), v)
            end
            hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
        end


        if hit ~= nil then
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, pos.Y, Bot.Character.HumanoidRootPart.CFrame.Z)
wait(0.5)
        else
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 300, Bot.Character.HumanoidRootPart.CFrame.Z)
local rayDirection2 = Vector3.new(0, -5, 0)
            while hit == nil do
                rayOrigin = Bot.Character.HumanoidRootPart.Position
ray = Ray.new(rayOrigin, rayDirection2)
                rain = game:GetService("Workspace"):FindFirstChild("Rain")
                if rain ~= nil then
                    ignoreStuff = {rain}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                else
                    local ignoreStuff = {}
                    for k, v in pairs(Bot:GetChildren()) do
                        table.insert(ignoreStuff, #(ignoreStuff), v)
                    end
                    hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                end
                wait()
            end
        end

Bot.Character.HumanoidRootPart.Velocity = Vector3.new()

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Hijack" then
                if v.Part.Parent.Name == "Camaro" or v.Part.Parent.Name == "Jeep" then
v.Duration = 0
                    v.Timed = true
                    v:Callback(v, true)
                end
            end
        end

wait(0.5)

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Enter Driver" then
                if v.Part.Parent.Name == "Camaro" or v.Part.Parent.Name == "Jeep" then
local rayOrigin = v.Part.Position + Vector3.new(0, 10, 0)
local ray = Ray.new(rayOrigin, rayDirection1)
                    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                    if rain ~= nil then
                        local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                        for k, v in pairs(Bot:GetChildren()) do
                            table.insert(ignoreStuff, #(ignoreStuff), v)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    else
                        local ignoreStuff = {}
                        for k, v in pairs(Bot:GetChildren()) do
                            table.insert(ignoreStuff, #(ignoreStuff), v)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    end
                    if hit == nil then
                        v:Callback(v, true)
                    end
                end
            end
        end

wait(0.5)
        
        for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
            if pcall(function() return v.Seat.PlayerName end) then
                if v.Seat.PlayerName.Value == Bot.Name then
                    Car = v
                end
            end
        end

        if reset then
            return
        end
    end

local position = Vector3.new(0, 0, 0)
local distance = 100

    if teleporting then
        while (game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position - position).magnitude > distance do
            if LocationName == "museum" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(1121, 116, 1296))
task.wait(0.01)
                end
position = Vector3.new(1121, 116, 1296)
distance = 500
wait(0.01)
            end
            if LocationName == "bank" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(37, 25, 864))
task.wait(0.01)
                end
position = Vector3.new(37, 25, 864)
wait(0.01)
            end
            if LocationName == "mansion" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(3197, 63, -4655))
task.wait(0.01)
                end
position = Vector3.new(3197, 63, -4655)
wait(0.01)
            end
            if LocationName == "jewelry store" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(131, 19, 1304))
task.wait(0.01)
                end
position = Vector3.new(131, 19, 1304)
wait(0.01)
            end
            if LocationName == "tomb" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(544, 27, -501))
task.wait(0.01)
                end 
position = Vector3.new(544, 26, -522)
wait(0.01)
            end
            if LocationName == "casino vault" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(250, -74, -4527))
task.wait(0.01)
                end
position = Vector3.new(250, -74, -4527)
wait(0.01)
            end
            if LocationName == "casino security" then
for i = 1, 50 do
Car.Engine:PivotTo(CFrame.new(-99, 71, -4707))
task.wait(0.01)
                end
position = Vector3.new(-99, 71, -4707)
wait(0.01)
            end
wait(2)
        end
        return
    end

    
Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 500, Car.Engine.CFrame.Z)
wait(1)
    if LocationName ~= "Train" then
while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - location).magnitude > 11 do
            move(location)
            wait()
        end
    else
        for k, v in pairs(game.Workspace.Trains:GetChildren()) do
if string.sub(v.Name, 1, 6) == "BoxCar" then
                location = v
                break
            end
        end
while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(location.Model.Rob.Gold.Position.X, 500, location.Model.Rob.Gold.Position.Z)).magnitude > 11 do
move(Vector3.new(0, 0, 0), location.Model.Rob.Gold)
            wait()
        end
    end

local rayOrigin = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -3, 0)
    local ray = Ray.new(rayOrigin, rayDirection)
    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
    if rain ~= nil then
        ignoreStuff = {rain}
        for k, v in pairs(Bot:GetChildren()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    else
        local ignoreStuff = {}
        for k, v in pairs(Bot:GetChildren()) do
            table.insert(ignoreStuff, #(ignoreStuff), v)
        end
        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
    end

    if hit ~= nil then
        Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, pos.Y, Car.Engine.CFrame.Z)
    else
Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 300, Car.Engine.CFrame.Z)
local rayDirection2 = Vector3.new(0, -5, 0)
        while hit == nil do
            rayOrigin = Bot.Character.HumanoidRootPart.Position
ray = Ray.new(rayOrigin, rayDirection2)
            rain = game:GetService("Workspace"):FindFirstChild("Rain")
            if rain ~= nil then
                ignoreStuff = {rain}
                for k, v in pairs(Bot:GetChildren()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            else
                local ignoreStuff = {}
                for k, v in pairs(Bot:GetChildren()) do
                    table.insert(ignoreStuff, #(ignoreStuff), v)
                end
                hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
            end
            wait()
        end
    end

Car.Engine.Velocity = Vector3.new()
    

    if LocationName == "volcano base" then
wait(0.5)
groundMove(Vector3.new(2204, 25, -2479))
groundMove(Vector3.new(2289, 25, -2584))
wait(1)
groundMove(Vector3.new(2204, 25, -2479))
groundMove(Vector3.new(2275, 25, -2024))
    end

wait(0.5)
end

function move(pos, object)

    local Car = nil
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if object == nil then
        if Car == nil then
pos = Vector3.new(pos.X, 500, pos.Z)
            if reset then
                return
            end
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
while (Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z) - pos).magnitude > 5 do
                local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude
                local velocity = (Bot.Character.HumanoidRootPart.Position - pos) / amount
Bot.Character.HumanoidRootPart.Velocity = Vector3.new(velocity.X * config.FlySpeed, 0.1, velocity.Z * config.FlySpeed)
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
                wait()
                if reset then
                    return
                end
            end
            Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
Bot.Character.HumanoidRootPart.Velocity = Vector3.new()
        else
pos = Vector3.new(pos.X, 500, pos.Z)
            if reset then
                return
            end
Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - pos).magnitude > 10 do
                local amount = (Car.Engine.Position - pos).magnitude
                local velocity = (Car.Engine.Position - pos) / amount
Car.Engine.Velocity = Vector3.new(velocity.X * config.CarSpeed, 0.1, velocity.Z * config.CarSpeed)
Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
                wait()
                if reset then
                    return
                end
            end
            Car.Engine.CFrame = CFrame.new(pos)
Car.Engine.Velocity = Vector3.new()
        end
    else
        if Car == nil then
            if reset then
                return
            end
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
while (Vector3.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z) - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude > 5 do
local amount = (Bot.Character.HumanoidRootPart.Position - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude
local velocity = (Bot.Character.HumanoidRootPart.Position - Vector3.new(object.Position.X, 500, object.Position.Z)) / amount
Bot.Character.HumanoidRootPart.Velocity = Vector3.new(velocity.X * config.FlySpeed, 0.1, velocity.Z * config.FlySpeed)
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position.X, 500, Bot.Character.HumanoidRootPart.Position.Z)
                wait()
                if reset then
                    return
                end
            end
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(object.Position.X, 500, object.Position.Z))
Bot.Character.HumanoidRootPart.Velocity = Vector3.new()
        else
            if reset then
                return
            end
Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
while (Vector3.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z) - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude > 10 do
local amount = (Car.Engine.Position - Vector3.new(object.Position.X, 500, object.Position.Z)).magnitude
local velocity = (Car.Engine.Position - Vector3.new(object.Position.X, 500, object.Position.Z)) / amount
Car.Engine.Velocity = Vector3.new(velocity.X * config.CarSpeed, 0.1, velocity.Z * config.CarSpeed)
Car.Engine.CFrame = CFrame.new(Car.Engine.Position.X, 500, Car.Engine.Position.Z)
                wait()
                if reset then
                    return
                end
            end
Car.Engine.CFrame = CFrame.new(Vector3.new(object.Position.X, 500, object.Position.Z))
Car.Engine.Velocity = Vector3.new()
        end
    end
end

function groundMove(pos)

    local Car = nil
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if Car == nil then
while (Bot.Character.HumanoidRootPart.Position - pos).magnitude > 10 do
            local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude / config.GroundSpeed
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - pos) / amount
for i = 1, amount, 1 do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait()
            end
wait(0.1)
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    else
while (Car.Engine.Position - pos).magnitude > 10 do
            local amount = (Car.Engine.Position - pos).magnitude / config.GroundSpeed
            local MoveDist = (Car.Engine.Position - pos) / amount
for i = 1, amount, 1 do
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
Car.Engine.Velocity = Vector3.new(0,1.005,0)
                wait()
            end
wait(0.1)
        end
        Car.Engine.CFrame = CFrame.new(pos)
    end
end

function pathMove(pos)

    local Car = nil
    for i,v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
        if pcall(function() return v.Seat.PlayerName end) then
            if v.Seat.PlayerName.Value == Bot.Name then
                Car = v
            end
        end
    end

    if Car == nil then
while (Bot.Character.HumanoidRootPart.Position - pos).magnitude > 5 do
local amount = (Bot.Character.HumanoidRootPart.Position - pos).magnitude / (config.GroundSpeed / 2)
            local MoveDist = (Bot.Character.HumanoidRootPart.Position - pos) / amount
for i = 1, amount, 1 do
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.Position - MoveDist)
Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
                wait()
            end
wait(0.1)
        end
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(pos)
    else
while (Car.Engine.Position - pos).magnitude > 5 do
local amount = (Car.Engine.Position - pos).magnitude / (config.GroundSpeed / 2)
            local MoveDist = (Car.Engine.Position - pos) / amount
for i = 1, amount, 1 do
                Car.Engine.CFrame = CFrame.new(Car.Engine.Position - MoveDist)
Car.Engine.Velocity = Vector3.new(0,1.005,0)
                wait()
            end
wait(0.1)
        end
        Car.Engine.CFrame = CFrame.new(pos)
    end
end

local robbedMuseum = false
local robbedBank = false
local robbedJewel = false
local robbedCasino = false
local robbedTomb = false
local robbedPlane = false

function robLocation()
    if RobbingLocation then
        return
    end

if game.Workspace:FindFirstChild("Plane") and game.Workspace.Plane:FindFirstChild("Crates") and not config.safe and game.Workspace.Plane:FindFirstChild("CargoPlane") and game.Workspace.Plane.CargoPlane.Position.Z < 2500 and game.Workspace.Plane.CargoPlane.Position.X > -1150 then
        if not robbedPlane then
            RobbingLocation = true
            LogMessage("robbing cargo plane")
            RobPlane()
            return
        end
    else
        robbedPlane = false
    end

    -- train
    -- boat

    if GetMansionStatus() then
        RobbingLocation = true
        LogMessage("robbing mansion")
        RobMansion()
        return
    end

    if GetMuseumStatus() then
        if not robbedMuseum then
            RobbingLocation = true
            robbedMuseum = true
            LogMessage("robbing museum")
            RobMuseum()
            return
        end
    else
        robbedMuseum = false
    end
    if GetBankStatus() then
        if not robbedBank then
            RobbingLocation = true
            robbedBank = true
            LogMessage("robbing bank")
            RobBank()
            return
        end
    else
        robbedBank = false
    end
    if GetJewelStatus() then
        if not robbedJewel then
            RobbingLocation = true
            robbedJewel = true
            LogMessage("robbing jewelry store")
            RobJewel()
            return
        end
    else
        robbedJewel = false
    end
    if GetCasinoStatus() then
        if not robbedCasino then
            RobbingLocation = true
            robbedCasino = true
            LogMessage("robbing casino")
            RobCasino()
            return
        end
    else
        robbedCasino = false
    end
    if game.Workspace:FindFirstChild("Drop") then
        local pos = nil
local ClosestDistance = 99999
        local Drop = nil
        for k, v in pairs(game:GetService("Workspace"):GetChildren()) do
            if v.Name == "Drop" and v:FindFirstChild("Root") then
                if (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude < ClosestDistance then
                    ClosestDistance = (v.Root.Position - Bot.Character.HumanoidRootPart.Position).magnitude
                    local rayOrigin = v.Root.Position
local rayDirection2 = Vector3.new(0, -5, 0)
local ray = Ray.new(rayOrigin, rayDirection2)
                    local rain = game:GetService("Workspace"):FindFirstChild("Rain")
                    if rain ~= nil then
                        local ignoreStuff = {rain.RainDroplets, rain.RainFall}
                        for k, l in pairs(v:GetDescendants()) do
                            table.insert(ignoreStuff, #(ignoreStuff), l)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    else
                        local ignoreStuff = {}
                        for k, l in pairs(v:GetDescendants()) do
                            table.insert(ignoreStuff, #(ignoreStuff), l)
                        end
                        hit, pos = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(ray, ignoreStuff)
                    end
                    if hit ~= nil then
pos = Vector3.new(v.Root.Position.X, 500, v.Root.Position.Z) + Vector3.new(5, 0, 5)
                        Drop = v
                    end
                end
            end
        end
        if Drop == nil then
            return
        end
        LogMessage("collecting an airdrop")
        RobDrop(Drop, pos)
        return
    end
    -- gas and donut
end

function RobBank()

botMove(Vector3.new(-1, 500, 865), "bank", not config.safe)
wait(1)
    exitCar.OnJump()
wait(0.5)

    if not GetBankStatus() then
        RobbingLocation = false
        return
    end

    if config.safe then
pathMove(Vector3.new(-1, 25, 865))
pathMove(Vector3.new(37, 25, 864))
    end
pathMove(Vector3.new(40, 20, 924))

if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("02Basement") then
        
pathMove(Vector3.new(73, 10, 919))
pathMove(Vector3.new(86, 10, 918))
pathMove(Vector3.new(93, 0, 964))
pathMove(Vector3.new(47, -7, 951))
pathMove(Vector3.new(1, -7, 959))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(1, -7, 959))
pathMove(Vector3.new(47, -7, 951))
pathMove(Vector3.new(93, 0, 964))
pathMove(Vector3.new(86, 10, 918))
pathMove(Vector3.new(73, 10, 919))

    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("03Corridor") then
        
pathMove(Vector3.new(57, 19, 923))
pathMove(Vector3.new(57, -7, 923))
pathMove(Vector3.new(63, -7, 917))
pathMove(Vector3.new(202, -7, 897))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end
        
pathMove(Vector3.new(202, -7, 897))
pathMove(Vector3.new(63, -7, 917))
pathMove(Vector3.new(57, -7, 923))
pathMove(Vector3.new(57, 19, 923))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("01UpperManagement") then

pathMove(Vector3.new(84, 28, 916))
pathMove(Vector3.new(70, 61, 835))
pathMove(Vector3.new(27, 65, 841))
pathMove(Vector3.new(58, 65, 882))
pathMove(Vector3.new(38, 65, 920))
pathMove(Vector3.new(83, 61, 920))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(83, 61, 920))
pathMove(Vector3.new(38, 65, 920))
pathMove(Vector3.new(58, 65, 882))
pathMove(Vector3.new(27, 65, 841))
pathMove(Vector3.new(70, 61, 835))
pathMove(Vector3.new(84, 28, 916))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("07TheMint") then

pathMove(Vector3.new(61, 19, 921))
pathMove(Vector3.new(102, 3, 914))
pathMove(Vector3.new(92, 5, 850))
pathMove(Vector3.new(50, 5, 821))
pathMove(Vector3.new(47, 5, 800))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)
        
        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(47, 5, 800))
pathMove(Vector3.new(50, 5, 821))
pathMove(Vector3.new(92, 5, 850))
pathMove(Vector3.new(102, 3, 914))
pathMove(Vector3.new(61, 19, 921))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("08Deductions") then
        
pathMove(Vector3.new(59, 19, 922))
pathMove(Vector3.new(102, 3, 914))
pathMove(Vector3.new(111, 3, 973))
pathMove(Vector3.new(63, 3, 958))
pathMove(Vector3.new(50, 3, 962))
pathMove(Vector3.new(39, 3, 964))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end 

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(39, 3, 964))
pathMove(Vector3.new(63, 3, 958))
pathMove(Vector3.new(111, 3, 973))
pathMove(Vector3.new(102, 3, 914))
pathMove(Vector3.new(59, 19, 922))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("05Underwater") then

pathMove(Vector3.new(60, 19, 922))
pathMove(Vector3.new(103, 3, 914))
pathMove(Vector3.new(96, -13, 878))
pathMove(Vector3.new(93, -13, 856))
pathMove(Vector3.new(128, -13, 850))
pathMove(Vector3.new(139, -7, 847))
pathMove(Vector3.new(159, -7, 843))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(159, -7, 843))
pathMove(Vector3.new(139, -7, 847))
pathMove(Vector3.new(128, -13, 850))
pathMove(Vector3.new(93, -13, 856))
pathMove(Vector3.new(96, -13, 878))
pathMove(Vector3.new(103, 3, 914))
pathMove(Vector3.new(60, 19, 922))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("04Remastered") then

pathMove(Vector3.new(60, 19, 922))
pathMove(Vector3.new(101, 2, 914))
pathMove(Vector3.new(95, 2, 876))
pathMove(Vector3.new(19, 2, 888))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(19, 2, 888))
pathMove(Vector3.new(95, 2, 876))
pathMove(Vector3.new(101, 2, 914))
pathMove(Vector3.new(60, 19, 922))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("06TheBlueRoom") then

pathMove(Vector3.new(57, 19, 922))
pathMove(Vector3.new(57, 1, 922))
pathMove(Vector3.new(-49, 1, 941))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(-49, 1, 941))
pathMove(Vector3.new(57, 1, 922))
pathMove(Vector3.new(57, 19, 922))
    end
if game.Workspace.Banks:GetChildren()[1].Layout:FindFirstChild("09Presidential") then

pathMove(Vector3.new(57, 20, 923))
pathMove(Vector3.new(57, -7, 923))
pathMove(Vector3.new(85, -7, 918))
pathMove(Vector3.new(96, -7, 991))
pathMove(Vector3.new(57, -7, 999))
pathMove(Vector3.new(49, -7, 956))

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        local oldPos = Bot.Character.HumanoidRootPart.Position
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Banks:GetChildren()[1].Layout:GetChildren()[1].TriggerDoor.Position)
wait(0.5)
        Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

        repeat wait() until Bot.PlayerGui.RobberyMoneyGui.Enabled

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end
        
repeat wait() until string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15)

        if not GetBankStatus() then
            RobbingLocation = false
            return
        end

        if config.safe then
wait(config.GroundSpeed * 2)
        end

pathMove(Vector3.new(49, -7, 956))
pathMove(Vector3.new(57, -7, 999))
pathMove(Vector3.new(96, -7, 991))
pathMove(Vector3.new(85, -7, 918))
pathMove(Vector3.new(57, -7, 923))
pathMove(Vector3.new(57, 20, 923))
    end

pathMove(Vector3.new(40, 20, 924))
pathMove(Vector3.new(27, 19, 860))
pathMove(Vector3.new(1, 19, 865))

wait(1)
    RobbingLocation = false
LogMessage("robbed bank for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6))
end

function GetBoxPos()
    local MinDist = math.huge
    local ClosestPos = nil
for k, v in pairs(game.Workspace.Jewelrys:GetChildren()[1].Boxes:GetChildren()) do
        if (v.Position - Bot.Character.HumanoidRootPart.Position).magnitude < MinDist then
            MinDist = (v.Position - Bot.Character.HumanoidRootPart.Position).magnitude
            ClosestPos = v.Position
        end
    end

    return ClosestPos
end

local jewelPositions = {
Vector3.new(116, 20, 1326),
Vector3.new(114, 20, 1316),
Vector3.new(112, 20, 1306),
Vector3.new(106, 20, 1283),
Vector3.new(114, 20, 1282),
Vector3.new(126, 20, 1280),
Vector3.new(138, 20, 1277),
Vector3.new(150, 20, 1292),
Vector3.new(153, 20, 1308),
Vector3.new(142, 21, 1310),
Vector3.new(140, 21, 1301),
Vector3.new(134, 21, 1283),
Vector3.new(130, 21, 1300),
Vector3.new(132, 21, 1312),
-- floor 1
}

local jewelPositions1 = {
Vector3.new(112, 38, 1318),
Vector3.new(111, 38, 1310),
Vector3.new(109, 38, 1300),
Vector3.new(114, 38, 1282),
Vector3.new(126, 38, 1280),
Vector3.new(138, 38, 1277),
Vector3.new(142, 39, 1310),
Vector3.new(140, 39, 1301),
Vector3.new(134, 39, 1283),
Vector3.new(130, 39, 1300),
Vector3.new(132, 39, 1312),
-- floor 2
}

function RobJewel()

    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end
botMove(Vector3.new(155, 500, 1369), "jewelry store", not config.safe)
wait(1)
    exitCar.OnJump()
wait(0.5)

    if config.safe and GetRobbingJewel() then

        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

groundMove(Vector3.new(155, 120, 1369))
groundMove(Vector3.new(105, 120, 1342))
groundMove(Vector3.new(95, 120, 1284))

pathMove(Vector3.new(112, 119, 1282))
pathMove(Vector3.new(125, 102, 1341))
pathMove(Vector3.new(137, 103, 1338))
pathMove(Vector3.new(137, 103, 1278))

if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("1_Classic") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(152, 102, 1273))
pathMove(Vector3.new(162, 85, 1331))
pathMove(Vector3.new(133, 80, 1336))
pathMove(Vector3.new(124, 80, 1277))
pathMove(Vector3.new(153, 80, 1273))
pathMove(Vector3.new(163, 63, 1332))
pathMove(Vector3.new(125, 70, 1337))
pathMove(Vector3.new(105, 70, 1281))
pathMove(Vector3.new(105, 55, 1281))
        end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("6_LaserRooms") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(152, 103, 1273))
pathMove(Vector3.new(162, 86, 1332))
pathMove(Vector3.new(134, 79, 1337))
pathMove(Vector3.new(124, 79, 1278))
pathMove(Vector3.new(152, 79, 1274))
pathMove(Vector3.new(163, 62, 1332))
pathMove(Vector3.new(129, 55, 1339))
pathMove(Vector3.new(135, 55, 1303))
pathMove(Vector3.new(117, 55, 1278))
        end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("5_TheCEO") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(153, 103, 1274))
pathMove(Vector3.new(162, 88, 1333))
pathMove(Vector3.new(132, 80, 1338))
pathMove(Vector3.new(100, 80, 1295))
pathMove(Vector3.new(127, 80, 1292))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(162, 63, 1333))
pathMove(Vector3.new(135, 65, 1338))
pathMove(Vector3.new(126, 65, 1282))
pathMove(Vector3.new(105, 65, 1281))
pathMove(Vector3.new(105, 55, 1281))
        end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("4_CameraFloors") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(153, 103, 1273))
pathMove(Vector3.new(163, 85, 1333))
pathMove(Vector3.new(136, 80, 1337))
pathMove(Vector3.new(134, 80, 1277))
pathMove(Vector3.new(153, 80, 1273))
pathMove(Vector3.new(163, 62, 1332))
pathMove(Vector3.new(120, 71, 1340))
pathMove(Vector3.new(106, 71, 1282))
pathMove(Vector3.new(106, 55, 1282))
        end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("3_ExpandedStore") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(153, 103, 1274))
pathMove(Vector3.new(163, 88, 1332))
pathMove(Vector3.new(132, 92, 1339))
pathMove(Vector3.new(140, 92, 1276))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(162, 63, 1332))
pathMove(Vector3.new(136, 60, 1337))
pathMove(Vector3.new(96, 60, 1285))
        end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("2_StorageAndMeeting") then
            if not GetJewelStatus() then
                RobbingLocation = false
                return
            end

pathMove(Vector3.new(153, 103, 1273))
pathMove(Vector3.new(162, 85, 1331))
pathMove(Vector3.new(101, 85, 1340))
pathMove(Vector3.new(126, 80, 1294))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(163, 63, 1333))
pathMove(Vector3.new(118, 55, 1332))
pathMove(Vector3.new(111, 55, 1310))
pathMove(Vector3.new(140, 55, 1301))
pathMove(Vector3.new(137, 55, 1284))
        end

        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end
pathMove(Vector3.new(97, 55, 1285))
pathMove(Vector3.new(107, 37, 1343))
pathMove(Vector3.new(130, 37, 1309))
pathMove(Vector3.new(97, 36, 1283))
pathMove(Vector3.new(105, 19, 1341))
    end
pathMove(Vector3.new(135, 22, 1343))
wait(1)
    for k, v in pairs(jewelPositions) do
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end
        pathMove(v)
        
if (GetBoxPos() - Bot.Character.HumanoidRootPart.Position).magnitude < 5 and ((string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled) or Bot.PlayerGui.RobberyMoneyGui.Enabled == false) then
            Bot.Character:PivotTo(CFrame.lookAt(Bot.Character.HumanoidRootPart.Position, GetBoxPos()))
for i = 1, 5, 1 do
                network:FireServer(punchHash)
wait(0.5)
            end
        end
    end

pathMove(Vector3.new(107, 22, 1343))
pathMove(Vector3.new(96, 38, 1285))
pathMove(Vector3.new(129, 38, 1306))

for k, v in pairs(jewelPositions1) do
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end
        pathMove(v)
        
if (GetBoxPos() - Bot.Character.HumanoidRootPart.Position).magnitude < 5 and ((string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled) or Bot.PlayerGui.RobberyMoneyGui.Enabled == false) then
            Bot.Character:PivotTo(CFrame.lookAt(Bot.Character.HumanoidRootPart.Position, GetBoxPos()))
for i = 1, 5, 1 do
                network:FireServer(punchHash)
wait(0.5)
            end
        end
    end
    
pathMove(Vector3.new(107, 37, 1343))
pathMove(Vector3.new(96, 55, 1285))

    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end

    if config.safe then
wait(config.GroundSpeed * 3)
    end

if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("1_Classic") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(105, 55, 1281))
pathMove(Vector3.new(105, 70, 1281))
pathMove(Vector3.new(125, 70, 1337))
pathMove(Vector3.new(163, 63, 1332))
pathMove(Vector3.new(153, 80, 1273))
pathMove(Vector3.new(124, 80, 1277))
pathMove(Vector3.new(133, 80, 1336))
pathMove(Vector3.new(162, 85, 1331))
pathMove(Vector3.new(152, 102, 1273))
    end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("6_LaserRooms") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(117, 55, 1278))
pathMove(Vector3.new(135, 55, 1303))
pathMove(Vector3.new(129, 55, 1339))
pathMove(Vector3.new(163, 62, 1332))
pathMove(Vector3.new(152, 79, 1274))
pathMove(Vector3.new(124, 79, 1278))
pathMove(Vector3.new(134, 79, 1337))
pathMove(Vector3.new(162, 86, 1332))
pathMove(Vector3.new(152, 103, 1273))
    end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("5_TheCEO") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(105, 55, 1281))
pathMove(Vector3.new(105, 65, 1281))
pathMove(Vector3.new(126, 65, 1282))
pathMove(Vector3.new(135, 65, 1338))
pathMove(Vector3.new(162, 63, 1333))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(127, 80, 1292))
pathMove(Vector3.new(100, 80, 1295))
pathMove(Vector3.new(132, 80, 1338))
pathMove(Vector3.new(162, 88, 1333))
pathMove(Vector3.new(153, 103, 1274))
    end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("4_CameraFloors") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(106, 55, 1282))
pathMove(Vector3.new(106, 71, 1282))
pathMove(Vector3.new(120, 71, 1340))
pathMove(Vector3.new(163, 62, 1332))
pathMove(Vector3.new(153, 80, 1273))
pathMove(Vector3.new(134, 80, 1277))
pathMove(Vector3.new(136, 80, 1337))
pathMove(Vector3.new(163, 85, 1333))
pathMove(Vector3.new(153, 103, 1273))
    end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("3_ExpandedStore") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(96, 60, 1285))
pathMove(Vector3.new(136, 60, 1337))
pathMove(Vector3.new(162, 63, 1332))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(140, 92, 1276))
pathMove(Vector3.new(132, 92, 1339))
pathMove(Vector3.new(163, 88, 1332))
pathMove(Vector3.new(153, 103, 1274))
    end
if game.Workspace.Jewelrys:GetChildren()[1].Floors:FindFirstChild("2_StorageAndMeeting") then
        if not GetJewelStatus() then
            RobbingLocation = false
            return
        end

pathMove(Vector3.new(137, 55, 1284))
pathMove(Vector3.new(140, 55, 1301))
pathMove(Vector3.new(111, 55, 1310))
pathMove(Vector3.new(118, 55, 1332))
pathMove(Vector3.new(163, 63, 1333))
pathMove(Vector3.new(153, 80, 1274))
pathMove(Vector3.new(126, 80, 1294))
pathMove(Vector3.new(101, 85, 1340))
pathMove(Vector3.new(162, 85, 1331))
pathMove(Vector3.new(153, 103, 1273))
    end
    if not GetJewelStatus() then
        RobbingLocation = false
        return
    end

pathMove(Vector3.new(137, 103, 1278))
pathMove(Vector3.new(137, 103, 1338))
pathMove(Vector3.new(125, 102, 1341))
pathMove(Vector3.new(112, 119, 1282))
pathMove(Vector3.new(95, 119, 1285))

wait(5)

botMove(Vector3.new(-300, 500, 1597), "city crim base", false)

wait(3)
    RobbingLocation = false
LogMessage("robbed jewelry store for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6))
end

function RobMansion()
botMove(Vector3.new(3020, 500, -4524), "mansion", config.safe)

wait(0.5)

    if not config.safe then
groundMove(Vector3.new(3090, 63, -4605))
pathMove(Vector3.new(3112, 64, -4606))
pathMove(Vector3.new(3199, 70, -4606))
pathMove(Vector3.new(3112, 64, -4606))
pathMove(Vector3.new(3197, 63, -4655))
    end
wait(20)

network:FireServer(hash, "AK47")

pathMove(Vector3.new(3201, -200, -4679))
pathMove(Vector3.new(3106, -204, -4675))
pathMove(Vector3.new(3106, -204, -4647))
pathMove(Vector3.new(3140, -204, -4647))
pathMove(Vector3.new(3147, -204, -4566))
    
wait(10)

    local boss = nil
    for k, v in pairs(game.Workspace.MansionRobbery:GetDescendants()) do
        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
            boss = v
        end
    end

wait(0.5)

    while boss:FindFirstChild("Humanoid") do
        pcall(function()
toolname = "AK47"
            if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
                local tool = Bot.Backpack:FindFirstChild(toolname)
                Bot.Character.Humanoid:EquipTool(tool)
            end
        end)

        local args = {
[1] = true
        }

game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

        for k, v in pairs(game.Workspace.MansionRobbery.GuardsFolder:GetDescendants()) do
            if (v:FindFirstChild("GuardCharacterToPlayer")) then
                v:Destroy()
            end
        end
game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,game,0)
        wait()
    end
game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,false,game,0)

wait(5)

pathMove(Vector3.new(3113, -204, -4439))
pathMove(Vector3.new(3097, -204, -4440))
pathMove(Vector3.new(3097, -219, -4519))
pathMove(Vector3.new(3077, -221, -4518))
pathMove(Vector3.new(3036, -221, -4473))
end

function RobCasino()
    if not GetCasinoStatus() then
        RobbingLocation = false
        return
    end
    if not config.safe then
        exitCar.OnJump()
wait(0.5)
        for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
            if not GetCasinoStatus() then
                RobbingLocation = false
                return
            end
            while v.Display.BrickColor ~= BrickColor.new("Institutional white") and v.Display.BrickColor ~= BrickColor.new("Lime green") do       
                Bot.Character.HumanoidRootPart.CFrame = CFrame.new(v.Display.Position)
                v.CasinoComputerHack:FireServer()
                wait()
            end
            if v.Display.BrickColor == BrickColor.new("Lime green") then
                break
            end
        end

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            if not GetCasinoStatus() then
                RobbingLocation = false
                return
            end
if string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) and Bot.PlayerGui.RobberyMoneyGui.Enabled then
                break
            end
for i = 1, 30, 1 do
Bot.Character.HumanoidRootPart:PivotTo(CFrame.new(v.Position + Vector3.new(0, 5, 0)))
                v.CasinoLootCollect:FireServer()
wait(0.01)
            end
        end
wait(10)
    else
botMove(Vector3.new(-220, 500, -4575), "casino", false)
wait(1)
        exitCar.OnJump()
wait(0.5)
groundMove(Vector3.new(-220, 160, -4575))
pathMove(Vector3.new(-62, 160, -4718))
pathMove(Vector3.new(-13, 156, -4741))

wait(0.5)

        
        repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("4").ClickDetector)
            wait()
until game.Workspace.Casino.Elevator.Floors:GetChildren()[4].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-18, 156, -4754))

        local hacked = false

        for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
            if v.Display.BrickColor == BrickColor.new("Lime green") then
                hacked = true
            end
        end

        if not hacked then
            repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("3").ClickDetector)
                wait() 
until game.Workspace.Casino.Elevator.Floors:GetChildren()[3].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-3, 72, -4705))
pathMove(Vector3.new(-58, 72, -4684))
pathMove(Vector3.new(-44, 80, -4645))
            
            
            for k, v in pairs(game.Workspace.Casino.Computers:GetChildren()) do
                if v.Display.BrickColor ~= BrickColor.new("Institutional white") and v.Display.BrickColor ~= BrickColor.new("Lime green") then
pathMove(v.Display.Position + Vector3.new(0, 5, 0))
wait(0.1)
                    v.CasinoComputerHack:FireServer()
wait(0.3)
                    v.CasinoComputerHack:FireServer()
                end
            end

pathMove(Vector3.new(-44, 69, -4645))
pathMove(Vector3.new(-58, 72, -4684))
pathMove(Vector3.new(-3, 72, -4705))

            repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("3").ClickDetector)
                wait() 
until game.Workspace.Casino.Elevator.Floors:GetChildren()[3].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-18, 72, -4754))
        end

        repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("1").ClickDetector)
            wait() 
until game.Workspace.Casino.Elevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-15, -77, -4739))
pathMove(Vector3.new(13, -76, -4748))

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Break" then
v.Duration = 0
                v.Time = true
                v:Callback(v, true)
            end
        end

wait(1)

pathMove(Vector3.new(26, -77, -4751))
pathMove(Vector3.new(48, -77, -4667))
pathMove(Vector3.new(9, -77, -4658))
pathMove(Vector3.new(32, -77, -4581))
pathMove(Vector3.new(85, -77, -4536))
pathMove(Vector3.new(140, -77, -4527))

        local HackingVault = false
local hacked = 0
        local Rotate = true
        local VaultLight = game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Model.UnlockedLED

if math.floor(game.Workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Model.Body.Rotation.Y) ~= 2 then
hacked = 4
        end 
while hacked < 4 do
            if not HackingVault then
                game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.RequestHack:FireServer()
                HackingVault = true
hacked += 1
            end
            if HackingVault then

                if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
                    game:GetService("Workspace").Casino.HackableVaults.VaultDoorMain.InnerModel.Puzzle.UpdateDirection:FireServer()
hacked += 1
                    Rotate = false
                end
                if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                    Rotate = true
                end
wait(0.01)
            end
if math.floor(game.Workspace.Casino.HackableVaults.VaultDoorMain.InnerModel.Model.Body.Rotation.Y) ~= 2 then
                break
            end 
        end
        
wait(3)

pathMove(Vector3.new(250, -74, -4528))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(247, -76, -4542))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(237, -75, -4599))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(264, -77, -4614))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(262, -76, -4595))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(271, -77, -4595))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(255, -77, -4514))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(242, -76, -4459))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(258, -77, -4436))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(269, -77, -4439))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

pathMove(Vector3.new(256, -77, -4488))

pathMove(Vector3.new(301, -76, -4482))

        for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
            v.CasinoLootCollect:FireServer()
        end

if not Bot.PlayerGui.RobberyMoneyGui.Enabled and string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) then


pathMove(Vector3.new(314, -76, -4520))

            HackingVault = false
hacked = 0
            Rotate = true
VaultLight = game:GetService("Workspace").Casino.HackableVaults:GetChildren()[2].InnerModel.Model.UnlockedLED

while hacked < 4 do
                if not HackingVault then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[2].InnerModel.Puzzle.RequestHack:FireServer()
                    HackingVault = true
hacked += 1
                end
                if HackingVault then

                    if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[2].InnerModel.Puzzle.UpdateDirection:FireServer()
hacked += 1
                        Rotate = false
                    end
                    if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                        Rotate = true
                    end
wait(0.01)
                end
if math.floor(game.Workspace.Casino.HackableVaults:GetChildren()[2].InnerModel.Model.Body.Rotation.Y) ~= 0 then
                    break
                end 
                wait()
            end

wait(3)

pathMove(Vector3.new(331, -77, -4527))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(320, -77, -4484))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
            
pathMove(Vector3.new(334, -77, -4494))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
            
pathMove(Vector3.new(342, -77, -4536))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
            
pathMove(Vector3.new(337, -77, -4541))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(337, -77. -4558))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
            
pathMove(Vector3.new(328, -77, -4562))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(322, -77, -4582))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(321, -77, -4576))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(338, -77, -4520))
            
pathMove(Vector3.new(296, -77, -4525))
        end

if not Bot.PlayerGui.RobberyMoneyGui.Enabled and string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) then
            
pathMove(Vector3.new(283, -77, -4449))
            
            HackingVault = false
hacked = 0
            Rotate = true
VaultLight = game:GetService("Workspace").Casino.HackableVaults:GetChildren()[3].InnerModel.Model.UnlockedLED

while hacked < 4 do
                if not HackingVault then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[3].InnerModel.Puzzle.RequestHack:FireServer()
                    HackingVault = true
hacked += 1
                end
                if HackingVault then

                    if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[3].InnerModel.Puzzle.UpdateDirection:FireServer()
hacked += 1
                        Rotate = false
                    end
                    if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                        Rotate = true
                    end
wait(0.01)
                end
if math.floor(game.Workspace.Casino.HackableVaults:GetChildren()[3].InnerModel.Model.Body.Rotation.Y) ~= -60 then
                    break
                end 
                wait()
            end

wait(3)

pathMove(Vector3.new(283, -77, -4449))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
            
pathMove(Vector3.new(291, -77, -4454))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end
pathMove(Vector3.new(300, -77, -4461))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(282, -77, -4457))

pathMove(Vector3.new(273, -77, -4475))
        end

if not Bot.PlayerGui.RobberyMoneyGui.Enabled and string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) then
            
pathMove(Vector3.new(288, -77, -4579))
            
            HackingVault = false
hacked = 0
            Rotate = true
VaultLight = game:GetService("Workspace").Casino.HackableVaults:GetChildren()[4].InnerModel.Model.UnlockedLED

while hacked < 4 do
                if not HackingVault then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[4].InnerModel.Puzzle.RequestHack:FireServer()
                    HackingVault = true
hacked += 1
                end
                if HackingVault then

                    if VaultLight.BrickColor == BrickColor.new("Lime green") and Rotate then
game:GetService("Workspace").Casino.HackableVaults:GetChildren()[4].InnerModel.Puzzle.UpdateDirection:FireServer()
hacked += 1
                        Rotate = false
                    end
                    if VaultLight.BrickColor ~= BrickColor.new("Lime green") then
                        Rotate = true
                    end
wait(0.01)
                end
if math.floor(game.Workspace.Casino.HackableVaults:GetChildren()[4].InnerModel.Model.Body.Rotation.Y) ~= 60 then
                    break
                end 
                wait()
            end

wait(3)

pathMove(Vector3.new(308, -77, -4597))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(285, -77, -4609))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(289, -77, -4605))

            for k, v in pairs(game.Workspace.Casino.Loots:GetChildren()) do
                v.CasinoLootCollect:FireServer()
            end

pathMove(Vector3.new(291, -77, -4562))
        end

pathMove(Vector3.new(250, -74, -4528))
pathMove(Vector3.new(140, -77, -4527))
pathMove(Vector3.new(85, -77, -4536))
pathMove(Vector3.new(32, -77, -4581))
pathMove(Vector3.new(9, -77, -4658))
pathMove(Vector3.new(48, -77, -4667))
pathMove(Vector3.new(26, -77, -4751))

        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Break" then
v.Duration = 0
                v.Time = true
                v:Callback(v, true)
            end
        end

wait(1)

pathMove(Vector3.new(13, -76, -4748))
pathMove(Vector3.new(-15, -77, -4739))

        repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("1").ClickDetector)
            wait() 
until game.Workspace.Casino.Elevator.Floors:GetChildren()[1].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-18, -77, -4754))

        repeat 
fireclickdetector(game.Workspace.Casino.Elevator.Car.InnerModel.Calls:FindFirstChild("4").ClickDetector)
            wait() 
until game.Workspace.Casino.Elevator.Floors:GetChildren()[4].DoorLeft.InnerModel.Door.Position.X > -8

pathMove(Vector3.new(-13, 156, -4741))
pathMove(Vector3.new(-62, 160, -4718))
    end

if (Vector3.new(2275, 500, -2024) - Bot.Character.HumanoidRootPart).magnutide < (Vector3.new(-300, 500, 1597) - Bot.Character.HumanoidRootPart).magnitude then
botMove(Vector3.new(2275, 500, -2024), "volcano base", false)
    else
botMove(Vector3.new(-300, 500, 1597), "city crim base", false)
    end
wait(1)
    RobbingLocation = false
LogMessage("robbed casino for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6))
end

function RobMuseum()
botMove(Vector3.new(1048, 500, 1242), "museum", not config.safe)
wait(1)
    exitCar.OnJump()
wait(0.5)

    if not GetMuseumStatus() then
        return
    end

pathMove(Vector3.new(1133, 107, 1307))

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Grab Bone" then
if Bot.PlayerGui.RobberyMoneyGui.Enabled and (string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 3) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 7, 9) or string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 4) == string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 8, 11)) then
                break
            end
v.Duration = 0
            v.Time = true
            v:Callback(v, true)
wait(0.5)
        end
    end

    if true then -- REPLACE ALL WITH CHECK TO SEE IF BAG FULL
pathMove(Vector3.new(1133, 107, 1307))
wait(0.1)
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Grab DinoArm" then
v.Duration = 0
                v.Time = true
                v:Callback(v, true)
wait(0.5)
            end
        end
    end 

    if true then -- REPLACE ALL WITH CHECK TO SEE IF BAG FULL
pathMove(Vector3.new(1128, 107, 1259))
wait(0.1)
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Grab Mask" then
v.Duration = 0
                v.Time = true
                v:Callback(v, true)
wait(0.5)
            end
        end
    end 

-- grab other 2 center objects

    if true then -- REPLACE ALL WITH CHECK TO SEE IF BAG FULL
pathMove(Vector3.new(1178, 107, 1258))
wait(0.1)
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Grab Relic" then
v.Duration = 0
                v.Time = true
                v:Callback(v, true)
wait(0.5)
            end
        end
    end 

    -- other side location



pathMove(Vector3.new(1059, 106, 1247))

    if Bot.PlayerGui.RobberyMoneyGui.Enabled then
wait(5)
botMove(Vector3.new(2275, 500, -2024), "volcano base", false)
    end
wait(1)
    RobbingLocation = false
if string.len(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text) == 9 then
LogMessage("robbed museum for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 3))
    else
LogMessage("robbed museum for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 4))
    end
end

function RobDonut()
botMove(Vector3.new(77, 500, -1516), "donut store", false)
wait(1)
    exitCar.OnJump()
wait(0.5)
pathMove(Vector3.new(96, 20, -1527))
pathMove(Vector3.new(111, 20, -1578))
pathMove(Vector3.new(78, 20, -1589))

wait(0.5)

    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)

wait(11)

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Rob" then
            v:Callback(v, true)
        end
    end

pathMove(Vector3.new(111, 20, -1578))
pathMove(Vector3.new(96, 20, -1527))
pathMove(Vector3.new(92, 20, -1516))

wait(1)
    RobbingLocation = false
LogMessage("robbed donut store for $750")
end

function RobGas()
botMove(Vector3.new(-1563, 500, 708), "gas station", false)
wait(1)
    exitCar.OnJump()
wait(0.5)
pathMove(Vector3.new(-1596, 19, 709))
pathMove(Vector3.new(-1599, 19, 687))

wait(0.5)

    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
wait(0.1)
    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)

wait(11)

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Rob" then
            v:Callback(v, true)
        end
    end

pathMove(Vector3.new(-1596, 19, 709))
pathMove(Vector3.new(-1567, 19, 705))

wait(1)
    RobbingLocation = false
LogMessage("robbed gas station for $750")
end

function RobTrain()
botMove(Vector3.new(587, 500, -477), "Train", false)
wait(1)
    exitCar.OnJump()
wait(0.5)
for i = 1, 10, 1 do
        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Breach Vault" or v.Name == "Open Door" then
v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
            end
        end
    end

    local cart = nil
    for k, v in pairs(game.Workspace.Trains:GetChildren()) do
if string.sub(v.Name, 1, 6) == "BoxCar" then
            cart = v
            break
        end
    end

    local oldPos = game.Players.localPlayer.Character.HumanoidRootPart.Position
while not game.Players.localPlayer.PlayerGui.RobberyMoneyGui.Enabled and string.sub(game.Players.localPlayer.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6) ~= string.sub(game.Players.localPlayer.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 10, 15) do
        game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Trains.BoxCar.Model.Rob.Gold.Position)
wait(0.01)
    end
    game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

wait(0.5)

    RobbingLocation = false
LogMessage("robbed train for "..string.sub(Bot.PlayerGui.RobberyMoneyGui.Container.Bottom.Progress.Amount.Text, 1, 6))
end

function RobTomb()

    if not GetTombStatus() then
        RobbingLocation = false
        return
    end
    
botMove(Vector3.new(587, 500, -477), "tomb", not config.safe)

wait(1)
    exitCar.OnJump()
wait(0.5)
    if config.safe then
pathMove(Vector3.new(541, 30, -501))
    end

    if not GetTombStatus() then
        RobbingLocation = false
        return
    end

pathMove(Vector3.new(546, 25, -546))
pathMove(Vector3.new(546, -59, -546))
pathMove(Vector3.new(521, -59, -346))
pathMove(Vector3.new(570, -71, -254))
pathMove(Vector3.new(620, -72, -229))
pathMove(Vector3.new(641, -72, -226))

for i = 1, 26, 1 do
for k = 1, 3, 1 do
game.Players.localPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.RobberyTomb.DartRoom.Pillars[tostring(i)].InnerModel.Platform.Position + Vector3.new(0, 5, 0))
wait(0.01)
        end
    end

    if not GetTombStatus() then
        RobbingLocation = false
        return
    end
    
pathMove(Vector3.new(799, -90, -207))
pathMove(Vector3.new(833, -84, -203))
pathMove(Vector3.new(879, -93, -197))
pathMove(Vector3.new(935, -84, -192))
    

pathMove(Vector3.new(941, -85, -191))

wait(4)

pathMove(Vector3.new(967, -85, -187))

wait(4)

pathMove(Vector3.new(986, -85, -185))

wait(0.1)

    if not GetTombStatus() then
        RobbingLocation = false
        return
    end

    for k, v in pairs(game:GetService("Workspace").RobberyTomb.Tomb.Gems:GetChildren()) do
        v.TombGemCollect:FireServer()
    end

wait(10)
    
pathMove(Vector3.new(1010, -84, -185))

    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Name == "Sit" then
v.Duration = 0
            v.Timed = true
            v:Callback(v, true)
        end
    end

repeat wait() until (Vector3.new(299, 19, 191) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 or (Vector3.new(1205, 14, -1242) - Bot.Character.HumanoidRootPart.Position).magnitude < 5

wait(5)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, "Space", false, game)
    exitCar.OnJump()
wait(1)

if (Vector3.new(1205, 14, -1242) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
pathMove(Vector3.new(1200, 20, -1222))
pathMove(Vector3.new(1293, 20, -1135))
    end

if (Vector3.new(299, 19, 191) - Bot.Character.HumanoidRootPart.Position).magnitude < 5 then
pathMove(Vector3.new(305, 20, 206))
pathMove(Vector3.new(232, 20, 211))
pathMove(Vector3.new(193, 20, 247))
    end

    RobbingLocation = false
LogMessage("robbed tomb for $7,000")
end

function RobDrop(Drop, pos)

    if not Drop.Root then
        return
    end

    botMove(pos, "nearest air drop", false)
    exitCar.OnJump()
wait(1)
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Drop.Root.Position)
wait(0.5)
    game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)

    while Drop:FindFirstChild("Root") do
        if not Drop:FindFirstChild("Root") then
            return
        end
        game:GetService('VirtualInputManager'):SendKeyEvent(true, "E", false, game)
        for k, v in pairs(Drop:GetDescendants()) do
            if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") then
                v:Destroy()
            end
        end
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Drop.Root.Position + Vector3.new(0, 5, 0))
wait(0.01)
    end

    game:GetService('VirtualInputManager'):SendKeyEvent(false, "E", false, game)

wait(1)
local MoneyCollected = 4000
wait(0.1)
    local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
    for i,v in pairs (UI.CircleAction.Specs) do
        if v.Part then
if string.sub(v.Name, 1, 9) == "Collect $" then
moneyText = string.sub(v.Name, 10, 14)
                moneyText = string.gsub(moneyText, ',', '')
                moneyText = string.gsub(moneyText, 'f', '')
                MoneyCollected += moneyText
v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
            end
        end
    end

wait(5)
    MoneyCollected = tostring(MoneyCollected)
    RobbingLocation = false
LogMessage("robbed air drop for $"..string.sub(MoneyCollected, 1, 1)..","..string.sub(MoneyCollected, 2, 4))
end

function RobPlane()
    exitCar.OnJump()
wait(0.5)
    local oldPos = Bot.Character.HumanoidRootPart.Position
for i = 1, 50, 1 do
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(game.Workspace.Plane.Crates:GetChildren()[1]:GetChildren()[1].Position)
        local UI = require(game:GetService("ReplicatedStorage").Module:WaitForChild("UI"));
        for i,v in pairs (UI.CircleAction.Specs) do
            if v.Name == "Inspect Crate" then
v.Duration = 0
                v.Timed = true
                v:Callback(v, true)
            end
        end
wait(0.01)
    end
    Bot.Character.HumanoidRootPart.CFrame = CFrame.new(oldPos)

wait(1)

    if Bot.PlayerGui.RobberyMoneyGui.Enabled then
botMove(Vector3.new(-342, 500, 2055), "cargo port", false)

wait(2)
print("robbed cargo plane for $7,000")
    end

    RobbingLocation = false
end


local platformed = false
local platform = nil
coroutine.wrap(function()
    while true do
        if toggled then
            if not RobbingLocation then
                if Bot.Character then
                    if Bot.Character:FindFirstChild("HumanoidRootPart") then
                        if not platformed then
                            platformed = true
                            local Car
                            for k, v in pairs(game:GetService("Workspace").Vehicles:GetChildren()) do
                                if pcall(function() return v.Seat.PlayerName end) then
                                    if v.Seat.PlayerName.Value == game:GetService("Players").LocalPlayer.Name then
                                        Car = v
                                    end
                                end
                            end
                            if platform ~= nil then
                                platform:Destroy()
                            end
                            platform = Instance.new("Part")
                            platform.Parent = game:GetService("Workspace")
                            platform.Anchored = true
platform.Size = Vector3.new(30, 0.5, 30)
                            if Car == nil then
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Bot.Character.HumanoidRootPart.CFrame.X, 5000, Bot.Character.HumanoidRootPart.CFrame.Z)
Bot.Character.HumanoidRootPart.Velocity = Vector3.new(0,1.005,0)
platform.Position = Bot.Character.HumanoidRootPart.Position + Vector3.new(0, -5, 0)
                            else
Car.Engine.CFrame = CFrame.new(Car.Engine.CFrame.X, 5000, Car.Engine.CFrame.Z)
Car.Engine.Velocity = Vector3.new(0,1.005,0)
platform.Position = Car.Engine.Position + Vector3.new(0, -5, 0)
                            end
                        else
                            robLocation()
if Bot.Character.HumanoidRootPart.Position.Y < 3000 then
                                platformed = false
                            end
                        end
                    end
                else
                    if platform ~= nil then
                        platform:Destroy()
                    end
                    platformed = false
                end
            else
                if platform ~= nil then
                    platform:Destroy()
                end
                platformed = false
            end
        else
            if platform ~= nil then
                platform:Destroy()
            end
            platformed = false
        end
wait(1)
    end
end)()

for k, v in pairs(game.Workspace:GetDescendants()) do
    if v.Name == "TouchInterest" then
        if v.Parent.Name ~= "LaserTouch" and v.Parent.Name ~= "TriggerDoor" and v.Parent.Name ~= "TouchToEnter" and v.Parent.Name ~= "HatchTouch" and v.Parent.Name ~= "TriggerFoundBossRoom" and v.Parent.Parent.Name ~= "ExitDoor" then
            v.Parent:GetAttributeChangedSignal("CanTouch"):Connect(function()
                v.CanTouch = false
            end)
            v.Parent.CanTouch = false
        end
    end
    if v.Name == "MansionBossNPCDamage" then
        v:Destroy()
    end
end

game.Workspace.DescendantAdded:Connect(function(part)
    if part.Name == "TouchInterest" then
        if part.Parent.Name ~= "LaserTouch" and part.Parent.Name ~= "TriggerDoor" and part.Parent.Name ~= "TouchToEnter" and part.Parent.Name ~= "HatchTouch" and part.Parent.Name ~= "TriggerFoundBossRoom" and part.Parent.Parent.Name ~= "ExitDoor" then
            part.Parent:GetAttributeChangedSignal("CanTouch"):Connect(function()
                part.CanTouch = false
            end)
            part.Parent.CanTouch = false
        end
    end
    if part.Name == "MansionBossNPCDamage" then
        part:Destroy()
    end
end)

require(game:GetService("ReplicatedStorage").Game.Paraglide).IsFlying = function() --Ragdoll

end

for i = 1, 10, 1 do
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-220, 500, -4575))
wait(0.01)
end

for i = 1, 10, 1 do
Bot.Character.HumanoidRootPart.CFrame = CFrame.new(Vector3.new(-1, 500, 865))
wait(0.01)
end


local old = old or require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList

if true then
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = function(...)
local nearestDistance, nearestEnemy = 999999, nil
        local nearestEnemyPlayer, nearestEnemyBoss
        for i,v in pairs(game:GetService("Players"):GetPlayers()) do
            if v.Team ~= game:GetService("Players").LocalPlayer.Team and v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                if v.Team.Name ~= "Prisoner" then
if v.Character.Humanoid.Health > 0 then
                        if (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                            nearestDistance, nearestEnemy = (v.Character.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, v
                            nearestEnemyPlayer = true
                            nearestEnemyBoss = false
                        end
                    end
                end
            end
        end
        for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
            if v.Name == "Drop" then
                for k, j in pairs(v:GetDescendants()) do
                    if j:FindFirstChild("Humanoid") and j:FindFirstChild("HumanoidRootPart") then
if j.Humanoid.Health > 0 then
                            if (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                                nearestDistance, nearestEnemy = (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, j
                                nearestEnemyPlayer = false
                                nearestEnemyBoss = false
                            end
                        end
                    end
                end
            end
            if v.Name == "MansionRobbery" then
                for k, j in pairs(v:GetDescendants()) do
                    if j:FindFirstChild("Humanoid") and j:FindFirstChild("HumanoidRootPart") then
if j.Humanoid.Health > 0 then
                            if (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < nearestDistance then
                                nearestDistance, nearestEnemy = (j.HumanoidRootPart.Position - game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.Position).Magnitude, j
                                nearestEnemyPlayer = false
                                nearestEnemyBoss = true
                            end
                        end
                    end
                end
            end
        end
        local arg = {old(...)}
if (tostring(getfenv(2).script) == "BulletEmitter" or tostring(getfenv(2).script) == "Taser") and nearestEnemy then
            if nearestEnemyPlayer then
arg[1] = nearestEnemy.Character.HumanoidRootPart
arg[2] = nearestEnemy.Character.HumanoidRootPart.Position
            elseif nearestEnemyBoss then
arg[1] = nearestEnemy.Head
arg[2] = nearestEnemy.Head.Position
            else
arg[1] = nearestEnemy.HumanoidRootPart
arg[2] = nearestEnemy.HumanoidRootPart.Position
            end
        end
        return unpack(arg)
    end
else
    require(game:GetService("ReplicatedStorage").Module.RayCast).RayIgnoreNonCollideWithIgnoreList = old
end

local shooting = false
coroutine.wrap(function()
    while true do
        local shoot = false
        if config.killAura then
            for k, v in pairs(game.Players:GetChildren()) do
                if v.Character and v.Character:FindFirstChild("HumanoidRootPart") then
                    if (v.Character.HumanoidRootPart.Position - Bot.Character.HumanoidRootPart.Position).magnitude < config.killAuraRange and v.Team ~= Bot.Team then
                        shoot = true
                    end
                end
            end

            if shoot then
                
network:FireServer(hash, "AK47")
                
wait(1)

                if not shooting then
                    pcall(function()
toolname = "AK47"
                        if Bot.Backpack:FindFirstChild(toolname) and Bot.Character:FindFirstChild(toolname) == nil then
                            local tool = Bot.Backpack:FindFirstChild(toolname)
                            Bot.Character.Humanoid:EquipTool(tool)
                        end
                    end)

                    local args = {
[1] = true
                    }

game:GetService("Players").LocalPlayer.Folder.AK47.InventoryEquipRemote:FireServer(unpack(args))

wait(0.5)
                end

                shooting = true
game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,true,game,0)
            else
                if shooting then
game:GetService('VirtualInputManager'):SendMouseButtonEvent(0,0,0,false,game,0)
                    shooting = false
                end
            end
        end
wait(1)
    end
end)()

if game.Players.localPlayer.PlayerScripts.WorldUnload:FindFirstChild("WorldUnload") then
    game.Players.localPlayer.PlayerScripts.WorldUnload.WorldUnload:Destroy()
end
if game.Players.localPlayer.PlayerScripts.WorldUnload:FindFirstChild("HumanoidUnload") then
    game.Players.localPlayer.PlayerScripts.HumanoidUnload.HumanoidUnload:Destroy()
end

--AntiAFK
local VirtualUser = game:service"VirtualUser"

game:service"Players".LocalPlayer.Idled:connect(function()

end)

local plrUtils = game:GetService("ReplicatedStorage").Game.PlayerUtils
require(plrUtils).hasKey = function() 
    return true
end

RobTrain()
